{"version":3,"file":"static/js/730.4bce08fc.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as Error,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  max-width: 200px;\n  gap: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Field = styled(FormikField)`\n  &:focus-visible {\n    box-shadow: 0 0 0 3px lightskyblue;\n  }\n`;\n\nexport const ErrorMessage = styled(Error)`\n  color: #f96722;\n  font-size: 14px;\n`;\n","import { Formik } from 'formik';\nimport { Form, Field, ErrorMessage } from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport Button from '@mui/material/Button';\n\nconst contactsFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required field'),\n  number: Yup.string()\n    .matches(\n      /^[0-9]{3}-[0-9]{2}-[0-9]{2}$/,\n      'Please, enter only digits in format of \"123-12-12\"'\n    )\n    .required('Required field'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactsFormSchema}\n      onSubmit={(values, actions) => {\n        if (\n          contacts.some(\n            contact => contact.name.toLowerCase() === values.name.toLowerCase()\n          )\n        ) {\n          return alert(`${values.name} is already in contacts!`);\n        }\n\n        dispatch(\n          addContact({\n            name: values.name,\n            number: values.number,\n          })\n        );\n\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <label htmlFor=\"name\">Name</label>\n        <Field id=\"name\" name=\"name\" />\n        <ErrorMessage name=\"name\" component={'span'}></ErrorMessage>\n\n        <label htmlFor=\"number\">Number</label>\n        <Field id=\"number\" name=\"number\" type=\"tel\" />\n        <ErrorMessage name=\"number\" component={'span'}></ErrorMessage>\n\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { ListItem as Item } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const ListItem = styled(Item)`\n  justify-content: space-between !important;\n  max-width: 400px !important;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport { ListItem } from './Contact.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem divider={true}>\n      <p>\n        {name}: {number}\n      </p>\n      <Tooltip title=\"Delete\">\n        <IconButton onClick={() => dispatch(deleteContact(id))}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n    </ListItem>\n  );\n};\n","import { List } from '@mui/material';\nimport { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(getVisibleContacts);\n  return (\n    <>\n      <List>\n        {filteredContacts.map(item => (\n          <Contact\n            key={item.id}\n            id={item.id}\n            name={item.name}\n            number={item.number}\n          />\n        ))}\n      </List>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        onChange={evt => dispatch(updateFilter(evt.target.value))}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: start;\n  gap: 24px;\n  margin-bottom: 30px;\n`;\nexport const Title = styled.p`\n  font-size: 24px;\n  margin-bottom: 12px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getContacts, getError, getIsLoading } from 'redux/contacts/selectors';\nimport { Title, Wrapper } from './Contacts.styled';\nimport LinearProgress from '@mui/material-next/LinearProgress';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const isError = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Wrapper>\n        <ContactForm />\n        {isLoading && (\n          <LinearProgress color=\"primary\" variant=\"indeterminate\" />\n        )}\n        {isError !== null && <p>Something went wrong </p>}\n\n        {contacts.length > 0 && <Filter />}\n      </Wrapper>\n      <Title>Contacts:</Title>\n      {contacts.length > 0 ? <ContactList /> : <p>There are no contacts</p>}\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","ErrorMessage","Error","_templateObject3","contactsFormSchema","Yup","shape","name","min","max","required","number","matches","ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","some","contact","toLowerCase","alert","concat","addContact","resetForm","children","_jsxs","htmlFor","id","component","type","Button","variant","ListItem","Item","Contact","_ref","divider","Tooltip","title","IconButton","onClick","deleteContact","DeleteIcon","ContactList","filteredContacts","getVisibleContacts","_Fragment","List","map","item","Filter","onChange","evt","updateFilter","target","value","Wrapper","Title","Contacts","isLoading","getIsLoading","isError","getError","useEffect","fetchContacts","LinearProgress","color","length"],"sourceRoot":""}